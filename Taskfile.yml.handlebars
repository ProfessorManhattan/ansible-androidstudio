---
version: '3'

output: interleaved

vars:
  DOCKERHUB_PROFILE: {{profile.dockerhub}}{{#eq group 'ansible'}}{{#eq subgroup 'role'}}
  GALAXY_NAMESPACE:
    sh: "if [ -f meta/main.yml ]; then grep namespace < meta/main.yml | sed 's/.*namespace: \(.*\)$/\1/g'; fi"
  GALAXY_ROLE_NAME:
    sh: "if [ -f meta/main.yml ]; then grep role_name < meta/main.yml | sed 's/.*role_name: \(.*\)$/\1/g'; fi"{{/eq}}{{/eq}}
  GITHUB_ORG: {{profile.github}}
  GITHUB_USER: {{profile.github}}
  IGNORE_FOLDERS: -path './.autodoc/*' -o -path './.cache/*' -o -path './.common*' -o -path './.config/*' -o -path './.git/*'
    -o -path './.github/*' -o -path './.gitlab/*' -o -path './.husky/*' -o -path './.modules/*' -o -path './.npm/*'
    -o -path './.pnpm-store/*' -o -path './.shared/*' -o -path './.task/*' -o -path './.venv/*' -o -path './.vscode/*'
    -o -path './build/*' -o -path './dist/*' -o -path './node_modules/*' -o -path './venv/*' -o -name pnpm-lock.yaml
    -o -name package-lock.json -o -name poetry.lock -o -name '.variables.json'
  INIT_SCRIPT: https://gitlab.com/megabyte-labs/common/shared/-/raw/master/common/.gitlab/ci/scripts/update-init.sh
  NPM_KEEP_UPDATED: '@installdoc/* @mblabs/* @washingtondc/ping cz-conventional-changelog'
  NPM_PROGRAM: npm
  NPM_PROGRAM_LOCAL: pnpm
  NPX_HANDLE: ''
  NPX_PACKAGE: npx
  REPOSITORY_SUBTYPE: {{subgroup}}
  REPOSITORY_TYPE: {{group}}
  TIMEZONE: America/New_York

includes:
{{#each (taskfileSort (glob './.config/taskfiles/**/*.yml'))}}
  {{remove (remove (remove (replace (remove this "./.config/taskfiles/") "/Taskfile-" ":") "/Taskfile.yml") "Taskfile-") ".yml"}}: {{this}}
{{/each}}

tasks:
  donothing: 'true'

  group:exec:
    cmds:
      - task: git:gitlab:group:exec

  init:
    desc: Ensures project is initialized with upstream files and migrates pre-existing projects
    cmds:
      - |
        if [ -n "$GITLAB_CI" ]; then
          if [ -n "$UPDATE_INIT_SCRIPT" ]; then curl -s "$UPDATE_INIT_SCRIPT" | bash; fi
        else
          bash <(curl -s \{{.INIT_SCRIPT}})
        fi

  prepare:
    desc: Prepares the project for the normal start command
    cmds:
      - task: boilerplate:check:package
      - task: boilerplate:clean

  start:
    desc: Set up the project and refresh it with the latest changes
    summary: |
      # Set up the project

      This task will scaffold the project with the latest upstream changes
      and ensure your development environment has all the dependencies installed.

      **Example usage:**
      `task start`
    cmds:
      - task: {{#eq group "common"}}upstream:{{#eq subgroup "shared"}}shared{{else}}common{{/eq}}{{else}}{{#eq group "documentation"}}upstream:{{#eq subgroup "shared"}}commondocs{{else}}docs{{/eq}}{{else}}upstream:project{{/eq}}{{/eq}}
