"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.gitlabCIRules = exports.gitlabCIOrder = void 0;
exports.gitlabCIOrder = [
    'stage',
    'stages',
    'image',
    'services',
    'extends',
    'inherit',
    'environment',
    'parallel',
    'resource_group',
    'allow_failure',
    'interruptible',
    'retry',
    'timeout',
    'when',
    'only',
    'except',
    'workflow',
    'rules',
    'needs',
    'trigger',
    'secrets',
    'variables',
    'tags',
    'dash_configuration',
    'coverage',
    'dependencies',
    'cache',
    'before_script',
    'script',
    'after_script',
    'artifacts',
    'release',
    'pages',
    'include'
];
exports.gitlabCIRules = {
    'yml/sort-keys': [
        'error',
        {
            order: exports.gitlabCIOrder,
            pathPattern: '^[[]?.?.?([a-zA-Z0-9-]+).?.?$'
        },
        {
            order: ['name', 'entrypoint', 'command', 'alias', 'variables'],
            pathPattern: 'services[[][0-9].$'
        },
        {
            order: ['if', 'changes', 'exists', 'allow_failure', 'variables', 'when'],
            pathPattern: 'rules[[][0-9].$'
        },
        {
            order: ['name', 'entrypoint'],
            pathPattern: 'image$'
        },
        {
            order: { type: 'asc' },
            pathPattern: '^[[]?.?.?([a-zA-Z0-9-]+).?.?..*$'
        },
        {
            order: exports.gitlabCIOrder,
            pathPattern: '^$'
        }
    ]
};
//# sourceMappingURL=gitlab-ci.js.map