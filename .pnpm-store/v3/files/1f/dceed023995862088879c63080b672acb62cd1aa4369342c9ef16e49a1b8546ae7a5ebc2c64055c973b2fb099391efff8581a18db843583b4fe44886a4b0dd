// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`yieldfrom array 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": YieldFrom {
        "kind": "yieldfrom",
        "value": Array {
          "items": Array [
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "3",
              },
            },
            Entry {
              "byRef": false,
              "key": null,
              "kind": "entry",
              "unpack": false,
              "value": Number {
                "kind": "number",
                "value": "4",
              },
            },
          ],
          "kind": "array",
          "shortForm": true,
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`yieldfrom new 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": YieldFrom {
        "kind": "yieldfrom",
        "value": New {
          "arguments": Array [
            Array {
              "items": Array [
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Number {
                    "kind": "number",
                    "value": "5",
                  },
                },
                Entry {
                  "byRef": false,
                  "key": null,
                  "kind": "entry",
                  "unpack": false,
                  "value": Number {
                    "kind": "number",
                    "value": "6",
                  },
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          ],
          "kind": "new",
          "what": Name {
            "kind": "name",
            "name": "ArrayIterator",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`yieldfrom return 1`] = `
Program {
  "children": Array [
    Return {
      "expr": YieldFrom {
        "kind": "yieldfrom",
        "value": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "nine_ten",
            "resolution": "uqn",
          },
        },
      },
      "kind": "return",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`yieldfrom simple 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": YieldFrom {
        "kind": "yieldfrom",
        "value": Call {
          "arguments": Array [],
          "kind": "call",
          "what": Name {
            "kind": "name",
            "name": "from",
            "resolution": "uqn",
          },
        },
      },
      "kind": "expressionstatement",
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;
