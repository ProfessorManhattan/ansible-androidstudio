"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
exports.default = utils_1.createRule("space-eq-sign", {
    meta: {
        docs: {
            description: "require spacing around equals sign",
            categories: ["standard"],
            extensionRule: false,
            replacedBy: ["key-spacing"],
        },
        deprecated: true,
        fixable: "whitespace",
        schema: [],
        messages: {
            missingSpace: "Equals sign '=' must be spaced.",
        },
        type: "layout",
    },
    create(context) {
        if (!context.parserServices.isTOML) {
            return {};
        }
        const sourceCode = context.getSourceCode();
        function report(equalToken) {
            context.report({
                loc: equalToken.loc,
                messageId: "missingSpace",
                *fix(fixer) {
                    const previousToken = sourceCode.getTokenBefore(equalToken);
                    const afterToken = sourceCode.getTokenAfter(equalToken);
                    if (previousToken.range[1] === equalToken.range[0]) {
                        yield fixer.insertTextBefore(equalToken, " ");
                    }
                    if (equalToken.range[1] === afterToken.range[0]) {
                        yield fixer.insertTextAfter(equalToken, " ");
                    }
                },
            });
        }
        return {
            TOMLKeyValue(node) {
                const equalToken = sourceCode.getTokenBefore(node.value);
                if (node.key.range[1] === equalToken.range[0] ||
                    equalToken.range[1] === node.value.range[0]) {
                    report(equalToken);
                }
            },
        };
    },
});
