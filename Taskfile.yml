---
version: '3'

includes:
  ansible: ./.common/taskfiles/ansible/Taskfile.yml
  ansible:ansibler: ./.common/taskfiles/ansible/Taskfile-ansibler.yml
  ansible:test: ./.common/taskfiles/ansible/Taskfile-test.yml
  common: ./.common/taskfiles/common/Taskfile.yml
  common:update: ./.common/taskfiles/common/Taskfile-update.yml
  fix: ./.common/taskfiles/Taskfile-fix.yml
  git: ./.common/taskfiles/Taskfile-git.yml
  image: ./.common/taskfiles/Taskfile-image.yml
  install: ./.common/taskfiles/Taskfile-install.yml
  lint: ./.common/taskfiles/Taskfile-lint.yml
  security: ./.common/taskfiles/Taskfile-security.yml
  vscode: ./.common/taskfiles/Taskfile-vscode.yml

output: interleaved

vars:
  GALAXY_NAMESPACE:
    sh: if [ -f meta/main.yml ]; then yq e '.galaxy_info.namespace' meta/main.yml; else jq -r '.name' package.json | sed 's/\/.*//' | sed 's/@//'; fi
  GALAXY_ROLE_NAME:
    sh: if [ -f meta/main.yml ]; then yq e '.galaxy_info.role_name' meta/main.yml; else jq -r '.name' package.json | sed 's/.*\///'; fi
  GITHUB_ORG: ProfessorManhattan
  GITHUB_USER: ProfessorManhattan
  NPM_PROGRAM:
    sh: 'if [[ "${container:=}" == "docker" ]]; then echo "npm"; else echo "pnpm"; fi'
  NPX_PACKAGE: pnpx
  REPOSITORY_SUBTYPE: role
  REPOSITORY_TYPE: ansible
  TIMEZONE: America/New_York

tasks:
  donothing: 'true'

  start:
    desc: Set up the project and refresh it with the latest changes
    summary: |
      # Set up the project

      This task will scaffold the project with the latest upstream changes
      and ensure your development environment has all the dependencies installed.

      **Example usage:**
      `task start`
    cmds:
      - task: common:update:update
