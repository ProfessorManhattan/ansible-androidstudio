{
  "blueprint_requirements": [
    ["Variable Name", "Variable Description"],
    [
      "`description`",
      "Short description of the role, worded in such a way that it makes sense by itself and with 'An Ansible role that ' prepended to it"
    ],
    ["`group`", "This should always be set to 'ansible' for Ansible roles"],
    [
      "`name`",
      "This should be the official name for the product that the role installs/configures. It is used in the title of the repository and throughout the documentation to refer to the product."
    ],
    [
      "`overview`",
      "This variable should be a description of what the role installs. You can usually find a good description by Googling, \"What is Android Studio,\" for example if you were populating this variable for the [Android Studio role]({{ repository.group.ansible_roles }}/androidstudio). This text is shown at the top of the README, right below the header section and before the table of contents. Whenever possible, key products/terms should be linked to using markdown. You can see an example of us hyperlinking in this variable by checking out the [Android Studio role]({{ repository.group.ansible_roles }}/androidstudio). The idea is to make it as easy as possible for our users to figure out exactly what the role does."
    ],
    ["`repository.github`", "The HTTPS URL of the GitHub mirror"],
    ["`repository.gitlab`", "The HTTPS URL of the GitLab repository"],
    [
      "`slug`",
      "This should generally be the ending slug of the GitHub mirror. It is used for things like filling in the package.json name."
    ],
    ["`subgroup`", "This should always be set to 'role' for Ansible roles"],
    ["`title`", "The title of the README.md"]
  ],
  "description_emojis": "üë®üèª‚Äçüíª ü©∫",
  "docs": {
    "link": "https://megabyte.space/docs/common/ansible"
  },
  "group": "ansible",
  "hostapp_var_chart": [
    ["App", "Description"],
    ["**[Authelia](https://www.authelia.com/)**", "An authentication portal that supports SSO and 2FA"],
    [
      "**[Homer](https://github.com/bastienwirtz/homer)**",
      "A very simple homepage which is customized by the playbook to automatically include links to the Docker containers you choose to host on the computer"
    ],
    ["**[Portainer](https://www.portainer.io/)**", "A Docker management tool"],
    [
      "**[Serve](https://github.com/vercel/serve)**",
      "Simple interface for viewing files located or symlinked to in the `/var/www/` folder of the machine"
    ]
  ],
  "htpc_var_chart": [
    ["App", "Description"],
    ["**[WireGuard](https://docs.linuxserver.io/images/docker-wireguard)**", "Dedicated VPN for the HTPC applications"],
    ["**[Bazarr](https://docs.linuxserver.io/images/docker-bazarr)**", "Manages and automatically downloads subtitles"],
    ["**[Heimdall](https://docs.linuxserver.io/images/docker-heimdall)**", "Start page for all the HTPC apps"],
    ["**[Jackett](https://docs.linuxserver.io/images/docker-jackett)**", "Request proxy server for Radarr and Sonarr"],
    ["**[Kodi Headless](https://hub.docker.com/r/linuxserver/kodi-headless)**", "Backend for Kodi"],
    [
      "**[Lidarr](https://docs.linuxserver.io/images/docker-lidarr)**",
      "Music collection manager that automatically downloads from BitTorrent and Usenet"
    ],
    ["**[NZBGet](https://docs.linuxserver.io/images/docker-nzbget)**", "Usenet downloader"],
    ["**[Ombi](https://docs.linuxserver.io/images/docker-ombi)**", "Plex request and user management system"],
    ["**[Organizr](https://docs.linuxserver.io/images/docker-htpcmanager)**", "Front end for HTPC web applications"],
    ["**[Radarr](https://docs.linuxserver.io/images/docker-radarr)**", "Automatic movie downloader"],
    ["**[Sonarr](https://docs.linuxserver.io/images/docker-sonarr)**", "Automatic TV show downloader"],
    ["**[Tautulli](https://docs.linuxserver.io/images/docker-tautulli)**", "Metrics and monitoring for Plex"],
    ["**[Transmission](https://docs.linuxserver.io/images/docker-transmission)**", "BitTorrent client"]
  ],
  "link": {
    "docker_role": "https://github.com/ProfessorManhattan/ansible-docker",
    "mod_ansible_autodoc": "https://pypi.org/project/mod-ansible-autodoc/"
  },
  "molecule_descriptions": [
    ["Scenario", "Description"],
    ["`default`", "Uses VirtualBox to run tests for all platforms in parallel."],
    ["`docker`", "Uses Docker to run tests for all Linux platforms and versions in parallel."],
    [
      "`docker-snap`",
      "The same as the `docker` scenario except it excludes platforms that have trouble installing snap packages on Docker."
    ],
    ["`archlinux-desktop`", "Runs the test on the latest version of Archlinux desktop using VirtualBox."],
    ["`centos-desktop`", "Runs the test on the latest version of CentOS desktop using VirtualBox."],
    ["`debian-desktop`", "Runs the test on the latest version of Debian desktop using VirtualBox."],
    ["`fedora-desktop`", "Runs the test on the latest version of Fedora desktop using VirtualBox."],
    ["`macos-desktop`", "Runs the test on the latest version of macOS desktop using VirtualBox."],
    ["`ubuntu-desktop`", "Runs the test on the latest version of Ubuntu desktop using VirtualBox."],
    ["`windows-desktop`", "Runs the test on the latest version of Windows desktop using VirtualBox."],
    ["`ci-docker-archlinux`", "Uses Docker to test Archlinux."],
    ["`ci-docker-centos`", "Uses Docker to test multiple versions of CentOS."],
    ["`ci-docker-debian`", "Uses Docker to test multiple versions of Debian."],
    [
      "`ci-docker-debian-snap`",
      "Uses Docker to test Debian just like `ci-docker-debian` except it excludes versions that cannot install snap packages."
    ],
    ["`ci-docker-fedora`", "Uses Docker to test multiple versions of Fedora."],
    ["`ci-docker-ubuntu`", "Uses Docker to test multiple versions of Ubuntu."]
  ],
  "playbook_path": "megabyte-labs/gas-station",
  "profile": {
    "npmjs_organization": "installdoc"
  },
  "python_role_dependencies": [
    ["Package", "Description", "Required"],
    [
      "<b><a href=\"https://pypi.org/project/ansible/\" title=\"ansible on pypi.org\" target=\"_blank\">ansible</a></b>",
      "A configuration management system that can remotely configure computers",
      "<div align=\"center\">‚úîÔ∏è</div>"
    ],
    [
      "<b><a href=\"https://pypi.org/project/docker/\" title=\"docker on pypi.org\" target=\"_blank\">docker</a></b>",
      "Enables the capability of provisioning Docker containers with Ansible",
      "<div align=\"center\">‚úîÔ∏è</div>"
    ],
    [
      "<b><a href=\"https://pypi.org/project/python-vagrant/\" title=\"python-vagrant on pypi.org\" target=\"_blank\">python-vagrant</a></b>",
      "Required for provisioning Vagrant VMs",
      "<div align=\"center\">‚úîÔ∏è</div>"
    ],
    [
      "<b><a href=\"https://pypi.org/project/pywinrm/\" title=\"pywinrm on pypi.org\" target=\"_blank\">pywinrm</a></b>",
      "Required for provisioning Windows machines that are using WinRM",
      "<div align=\"center\">‚úîÔ∏è</div>"
    ],
    [
      "<b><a href=\"https://pypi.org/project/ansible-lint/\" title=\"ansible-lint on pypi.org\" target=\"_blank\">ansible-lint</a></b>",
      "Linting tool for Ansible files",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/ansibler/\" title=\"ansibler on pypi.org\" target=\"_blank\">ansibler</a></b>",
      "Custom tool used to generate advanced documentation (e.g. it generates the compatibility chart and some other charts)",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/black/\" title=\"black on pypi.org\" target=\"_blank\">black</a></b>",
      "Python file auto-formatter included in case project utilizes Python test scripts",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/blocklint/\" title=\"blocklint on pypi.org\" target=\"_blank\">blocklint</a></b>",
      "Linting tool that prevents certain words from entering the code base",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/flake8/\" title=\"flake8 on pypi.org\" target=\"_blank\">flake8</a></b>",
      "Python linter that reports Python syntax and style errors",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/mod-ansible-autodoc/\" title=\"mod-ansible-autodoc on pypi.org\" target=\"_blank\">mod-ansible-autodoc</a></b>",
      "Custom fork of [ansible-autodoc](https://pypi.org/project/ansible-autodoc/0.5.1.1/) which allows us to auto-generate documentation based on comments in the role's YAML files",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/molecule/\" title=\"molecule on pypi.org\" target=\"_blank\">molecule</a></b>",
      "Test framework for Ansible",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/molecule-docker/\" title=\"molecule-docker on pypi.org\" target=\"_blank\">molecule-docker</a></b>",
      "Molecule plugin for provisioning Docker containers",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/molecule-vagrant/\" title=\"molecule-vagrant on pypi.org\" target=\"_blank\">molecule-vagrant</a></b>",
      "Molecule plugin for provisioning Vagrant VMs",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/pre-commit-hooks/\" title=\"pre-commit-hooks on pypi.org\" target=\"_blank\">pre-commit-hooks</a></b>",
      "Suite of tools useful for linting",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/proselint/\" title=\"proselint on pypi.org\" target=\"_blank\">proselint</a></b>",
      "Linter used to generate English-language improvements (used to improve documentation)",
      ""
    ],
    [
      "<b><a href=\"https://pypi.org/project/yamllint/\" title=\"yamllint on pypi.org\" target=\"_blank\">yamllint</a></b>",
      "Linter for YAML files that ensures proper syntax and styling is used",
      ""
    ]
  ],
  "repository": {
    "prefix": "ansible-"
  }
}
