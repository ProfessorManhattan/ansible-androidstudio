# Standard Homebrew taps
tap "homebrew/core"
tap "homebrew/bundle"
tap "homebrew/services"
tap "caskroom/cask"

# Homebrew Formulae
# e.g. `brew install <program>`
# @brew [act](https://github.com/nektos/act) - Run GitHub Actions locally
brew "act"
# @brew [Appium](https://appium.io/) - Automation For Apps
brew "appium"
# @brew [bat](https://github.com/sharkdp/bat) - Clone of cat(1) with syntax highlighting and Git integration
brew "bat"
# @brew [Bitwarden CLI](https://github.com/bitwarden/cli) - Access and manage a Bitwarden vault via CLI
brew "bitwarden-cli"
# @brew [croc](https://github.com/schollz/croc) - Send things from one computer to another via CLI
brew "croc"
# @brew [curl](https://curl.se) - Get a file from an HTTP, HTTPS or FTP server
brew "curl"
# @brew [dasel](https://github.com/TomWright/dasel) - Select, put, and delete data from JSON, TOML, YAML, XML and CSV files with CLI
brew "dasel"
# @brew [direnv](https://github.com/direnv/direnv) - Load/unload environment variables
brew "direnv"
# @brew [dive](https://github.com/wagoodman/dive) - Tool for exploring layer in a docker image
brew "dive"
if OS.linux?
    brew "docker"
end
# @brew [Dockle](https://github.com/goodwithtech/dockle) - Container Image Linter for Security
brew "dockle"
# @brew [Dockle](https://github.com/goodwithtech/dockle) - Container Image Linter for Security
brew "goodwithtech/r/dockle"
# @brew [ExifTool](https://exiftool.org) - Perl lib for reading and writing EXIF metadata
brew "exiftool"
# @brew [ffsend](https://github.com/timvisee/ffsend) - Fully featured Firefox Send client to share files
brew "ffsend"
# @brew [gh](https://github.com/cli/cli) - GitHub command line tool
brew "gh"
# @brew [Git](https://git-scm.com) - Distributed version control system
brew "git"
# @brew [Gitleaks](https://github.com/zricethezav/gitleaks) - Scan git repos for secrets
brew "gitleaks"
# @brew [GLab](https://glab.readthedocs.io/) - Open-source GitLab CLI
brew "glab"
# @brew [Go](https://go.dev) - Open source programming language
brew "go"
# @brew [grex](https://github.com/pemistahl/grex) - Generate regular expressions via CLI
brew "grex"
# @brew [htmlq](https://github.com/mgdm/htmlq) - Use CSS to extract content from HTML via a CLI
brew "htmlq"
# @brew [hyperfine](https://github.com/sharkdp/hyperfine) - Command-line benchmarking tool
brew "hyperfine"
# @brew [jo](https://github.com/jpmens/jo) - JSON output from a shell
brew "jo"
# @brew [jq](https://stedolan.github.io/jq/) - Lightweight and flexible command-line JSON processor
brew "jq"
# @brew [MinIO Client](https://github.com/minio/mc) - Replacement for ls, cp and other commands for object storage
brew "minio/stable/mc"
# @brew [mkcert](https://github.com/FiloSottile/mkcert) - Simple tool to make locally trusted development certificates
brew "mkcert"
# @brew [Node](https://nodejs.org/) - Platform built on V8 to build network applications
brew "node"
# @brew [OpenSSH ](https://www.openssh.com/) - OpenBSD freely-licensed SSH connectivity tools
brew "openssh"
# @brew [ots](https://ots.sniptt.com) - Share end-to-end encrypted secrets with others via a one-time URL
brew "ots"
# @brew [oq](https://blacksmoke16.github.io/oq) - Performant, and portable jq wrapper to support formats other than JSON
brew "oq"
# @brew [php](https://www.php.net/) - General-purpose scripting language
brew "php", restart_service: true
# @brew [Poetry](https://python-poetry.org/) - Python package management tool
brew "poetry"
# @brew [pup](https://github.com/EricChiang/pup) - Parse HTML at the command-line
brew "pup"
# @brew [Python](https://www.python.org/) - Interpreted, interactive, object-oriented programming language python
brew "python"
# @brew [rsync](https://rsync.samba.org/) - Tool to do fast incremental file transfer
brew "rsync"
# @brew [Ruby](https://www.ruby-lang.org/) - Powerful, clean, object-oriented scripting language ruby
brew "ruby"
# @brew [sshpass](https://github.com/hudochenkov/homebrew-sshpass) - sshpass formula for Homebrew
brew "hudochenkov/sshpass/sshpass"
# @brew [sysbench](https://github.com/akopytov/sysbench) - System performance benchmark tool
brew "sysbench"
# @brew [Task](https://github.com/go-task/homebrew-tap) - Homebrew tap for Task
brew "go-task/tap/go-task"
# @brew [Teleport](https://github.com/bbatsche/homebrew-teleport) - Version specific Homebrew formulae for Gravitational Teleport
brew "teleport"
# @brew [Tokei](https://github.com/XAMPPRocky/tokei) - Count/display statistic of the code via CLI
brew "tokei"
# @brew [Trivy](https://aquasecurity.github.io/trivy/v0.18.3/) - Scan image for vulnerability via CLI
brew "aquasecurity/trivy/trivy"
# @brew [up](https://github.com/akavel/up) - Write Linux pipes with instant live preview with CLI
brew "up"
# @brew [Waypoint](https://www.waypointproject.io/) - Tool to build, deploy, and release any application on any platform
brew "hashicorp/tap/waypoint"
# @brew [Wireshark](https://www.wireshark.org) - Graphical network analyzer and capture tool
if OS.linux?
    brew "wireshark"
end
# @brew [Yarn](https://yarnpkg.com/) - JavaScript package manager
brew "yarn"
# @brew [yq](https://github.com/mikefarah/yq) - Process YAML documents from the CLI
brew "yq"
# @brew [Coreutils](https://www.gnu.org/software/coreutils) - GNU File, Shell, and Text utilities
if OS.mac?
    brew "coreutils"
end

# Homebrew Casks (only available on macOS)
# e.g. `brew install --cask <program>`
# @cask [Docker](https://docker.com) - Description
# @cask [Altair](https://altair.sirmuel.design/) - GraphQL client
cask "altair"
# @cask [balenaEtcher](https://balena.io/etcher) - Tool to flash OS images to SD cards & USB drives
cask "balenaetcher"
# @cask [Bitwarden](https://bitwarden.com/) - Desktop password and login vault
cask "bitwarden"
# @cask [Docker](https://docker.com) - App to build and share containerized applications and microservices
cask "docker"
# @cask [Firefox](https://www.mozilla.org/firefox/) - Web browser
cask "firefox"
# @cask [Gimp](https://www.gimp.org/) - Free and open-source image editor
cask "gimp"
# @cask [Chrome](https://www.google.com/chrome/) - Web browser
cask "google-chrome"
# @cask [iTerm2](https://www.iterm2.com/) - Terminal emulator as alternative to Apple's Terminal app
cask "iterm2"
cask "java" unless system "/usr/libexec/java_home --failfast"
# @cask [Lens](https://k8slens.dev/) - Kubernetes IDE
cask "lens"
# @cask [Microsoft Teams](https://teams.microsoft.com/downloads) - Meet, chat, call, and collaborate in just one place
cask "microsoft-teams"
# @cask [postman](https://www.postman.com/) - Collaboration platform for API development
cask "postman"
# @cask [slack](https://slack.com/) - Team communication and collaboration software
cask "slack"
# @cask [skype](https://www.skype.com/) - Video chat, voice call and instant messaging application
cask "skype"
# @cask [teamviewer](https://www.teamviewer.com/) - Remote access and connectivity software focused on security
cask "teamviewer"
# @cask [vagrant](https://www.vagrantup.com/) - Development environment
cask "vagrant"
# @cask [virtualbox](https://www.virtualbox.org/) - Virtualizer for x86 hardware
cask "virtualbox"
# @cask [Visual Studio Code](https://code.visualstudio.com/) - Open source code editor
cask "visual-studio-code"
# @cask [VMWare Fusion](https://www.vmware.com/products/fusion.html) - Create, manage, and run virtual machines
cask "vmware-fusion"
# @cask [wireshark](https://www.wireshark.org) - Graphical network analyzer and capture tool
cask "wireshark"


# Examples below
# 'brew install --with-rmtp', 'brew services restart' on version changes
# brew "denji/nginx/nginx-full", args: ["with-rmtp"], restart_service: :changed
# 'brew install', always 'brew services restart', 'brew link', 'brew unlink mysql' (if it is installed)
# brew "mysql@5.6", restart_service: true, link: true, conflicts_with: ["mysql"]
# 'brew install --cask'
# cask "google-chrome"
# 'brew install --cask --appdir=~/my-apps/Applications'
# cask "firefox", args: { appdir: "~/my-apps/Applications" }
# always upgrade auto-updated or unversioned cask to latest version even if already installed
# cask "opera", greedy: true
# 'brew install --cask' only if '/usr/libexec/java_home --failfast' fails
# cask "java" unless system "/usr/libexec/java_home --failfast"
# 'mas install'
# mas "1Password", id: 443987910
# 'whalebrew install'
# whalebrew "whalebrew/wget"
