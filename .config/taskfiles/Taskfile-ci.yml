---
version: '3'

tasks:
  before:
    deps:
      - :install:software:git
      - :install:software:node
    cmds:
      - git remote set-url origin "https://root:$GROUP_ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
      - git config user.email "$GITLAB_CI_EMAIL"
      - git config user.name "$GITLAB_CI_NAME"
      - git checkout "$CI_COMMIT_REF_NAME"
      - git pull origin "$CI_COMMIT_REF_NAME"
      - npm ci --cache .npm --ignore-scripts --prefer-offline
    preconditions:
      - sh: '[[ ! -z "$GROUP_ACCESS_TOKEN" ]]'
        msg: The `GROUP_ACCESS_TOKEN` GitLab CI variable must be set to an API key with priviledges to read/write to repositories.
      - sh: '[[ ! -z "$GITLAB_CI_EMAIL" ]]'
        msg: 'The `GITLAB_CI_EMAIL` GitLab CI variable must be set to the e-mail address you would like associated with
          automated commits (e.g. "help@mydomain.com").'
      - sh: '[[ ! -z "$GITLAB_CI_NAME" ]]'
        msg: 'The `GITLAB_CI_NAME` GitLab CI variable must be set to the name you would like associated with automated commits
          (e.g. "CI Automation").'

  commit:
    deps:
      - :install:software:git
    cmds:
      - git add --all
      - git diff --cached "*"
      - |
        if [[ $(git status --porcelain) ]]; then
          git commit -m "automation(upstream-sync) Applying changes from upstream repository."
          git push origin "$CI_COMMIT_REF_NAME"
        fi

  submodules:
    deps:
      - :install:software:git
    cmds:
      - >
        git submodule foreach 'git config user.email "$GITLAB_CI_EMAIL"; git config user.name "$GITLAB_CI_NAME";
        git checkout master; git pull origin master --ff-only'
