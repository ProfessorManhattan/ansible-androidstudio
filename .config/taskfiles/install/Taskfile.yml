---
version: '3'

tasks:
  install-doctor:
    cmds:
      - |
        if ! type {{.SOFTWARE}} &> /dev/null; then
          .config/log info 'Using https://install.doctor to install `{{.SOFTWARE}}`'
          curl -sS https://install.doctor/{{.SOFTWARE}} | bash
        fi
    status:
      - type {{.SOFTWARE}} &> /dev/null || [[ "${container:=}" == "docker" ]]

  modules:global:
    deps:
      - :install:npm:{{.NPM_PROGRAM}}
    run: once
    cmds:
      - task: :install:npm:commitizen
      - task: :install:npm:commitlint
      - task: :install:npm:cz-emoji
      - task: :install:npm:cspell
      - task: :install:npm:eslint
      - task: :install:npm:git-notify
      - task: :install:npm:liquidjs
      - task: :install:npm:husky
      - task: :install:npm:lint-staged
      - task: :install:npm:prettier
      - task: :install:npm:readme
      - task: :install:npm:remark
      - task: :install:npm:shellcheck
      - task: :install:npm:standard-version
      - task: :install:npm:yarnhook
    status:
      - '[[ "${container:=}" == "docker" ]]'

  modules:local:
    deps:
      - :install:npm:{{.NPM_PROGRAM_LOCAL}}
      - :install:npm:cz-emoji
    run: once
    cmds:
      - cmd: '{{.NPM_PROGRAM_LOCAL}} i --shamefully-hoist --no-frozen-lockfile'
        ignore_error: true
      - task: modules:local:sync
    sources:
      - package.json

  modules:local:sync:
    cmds:
      - |
        chmod +x .config/log
        chmod +x .config/scripts/lib/semver-compare.sh
        for PATTERN in {{.NPM_KEEP_UPDATED}}; do
          find ./node_modules/$PATTERN -maxdepth 0 | while read PATHH; do
            if [ -f "$PATHH/package.json" ]; then
              PKG="$(echo $PATHH | sed 's/.\/node_modules\///')"
              task install:modules:local:sync:package -- "$PKG"
            fi
          done
        done

  modules:local:sync:package:
    cmds:
      - cmd: |
          LATEST="$(npm view '{{.CLI_ARGS}}' version)"
          LOCAL="$(jq -r '.version' ./node_modules/{{.CLI_ARGS}}/package.json)"
          COMPARE="$(.config/scripts/lib/semver-compare.sh "$LOCAL" "$LATEST")"
          if [ "$COMPARE" == '-1' ]; then
            .config/log info "Version $LATEST is available for {{.CLI_ARGS}} (currently version $LOCAL)"
            {{.NPM_PROGRAM_LOCAL}} update {{.CLI_ARGS}}@latest
          fi
        ignore_error: true

  modules:prompt:
    deps:
      - :install:npm:{{.NPM_PROGRAM}}
    run: once
    cmds:
      - npm install chalk inquirer signale
    sources:
      - .config/scripts/prompts/**

  tslib:
    env:
      TSLIB_MSG: You can potentially optimize your bundle by setting `importHelpers` in compilerOptions
        in tsconfig.json to `true`. After importHelpers is set to true, the taskfiles will automatically
        install tslib.
    run: once
    cmds:
      - |
        if [ -f 'tsconfig.json' ]; then
          if [ "$(jq -r '.dependencies.tslib' package.json)" == 'null' ]; then
            if [ "$(jq -r '.compilerOptions.importHelpers')" != 'true' ]; then
              .config/log info '{{.TSLIB_MSG}}'
            else
              .config/log info 'Automatically installing `tslib` since `importHelpers` is set to true in tsconfig.json'
              {{.NPM_PROGRAM}} install --save tslib@latest
              .config/log success 'Successfully installed `tslib`'
            fi
          else
            task install:modules:local:sync:package -- "tslib"
          fi
        fi
    sources:
      - package.json
      - tsconfig.json
