---
version: '3'

tasks:
  act: echo TODO

  dasel:
    cmds:
      - task: dasel:{{OS}}

  dasel:darwin: echo TODO

  dasel:linux:
    deps:
      - :install:software:gh
    env:
      TMP:
        sh: mktemp -d
    cmds:
      - rm -rf "$TMP"
      - gh release download -R TomWright/dasel -p "{{.PATTERN}}" -D "$TMP"
      - mkdir -p ./bin && mv "$TMP"/dasel* ./bin/dasel
      - chmod +x ./bin/dasel
      - rm -rf "$TMP"
    status:
      - '[ -f ./bin/dasel ]'

  dasel:windows: echo TODO

  docker-pushrm:
    cmds:
      - task: docker-pushrm:{{OS}}

  docker-pushrm:darwin: echo TODO

  docker-pushrm:linux:
    deps:
      - :install:software:gh
    env:
      TMP:
        sh: mktemp -d
    cmds:
      - gh release download -R christian-korneck/docker-pushrm -p "*linux_amd64" -D "$TMP"
      - mkdir -p ./bin && mv "$TMP"/docker-pushrm* ./bin/docker-pushrm*
      - chmod +x ./bin/docker-pushrm
      - rm -rf "$TMP"
    status:
      - '[ -f ./bin/docker-pushrm ]'

  docker-pushrm:windows: echo TODO

  fusion:darwin: echo TODO

  fusion:
    cmds:
      - task: fusion:{{OS}}

  fusion:linux:
    deps:
      - :install:software:gh
    env:
      TMP:
        sh: mktemp -d
    cmds:
      - gh release download -R edgelaboratories/fusion -p "*Linux_amd64" -D "$TMP"
      - mkdir -p ./bin && mv "$TMP"/fusion* ./bin/fusion
      - chmod +x ./bin/fusion
      - rm -rf "$TMP"
    status:
      - '[ -f ./bin/fusion ]'

  fusion:windows: echo TODO

  gh:
    cmds:
      - task: gh:{{OS}}

  gh:darwin: echo TODO

  gh:linux:
    deps:
      - :install:software:gh
    env:
      TMP:
        sh: mktemp -d
    cmds:
      - gh release download -R cli/cli -p "*linux_amd64.tar.gz" -D "$TMP"
      - tar -zxvf "$TMP"/*linux_amd64.tar.gz --strip-component 1 -C "$TMP"
      - mkdir -p ./bin && mv "$TMP"/bin/gh ./bin/gh
      - chmod +x ./bin/gh
      - rm -rf "$TMP"
    status:
      - '[ -f ./bin/gh ]'

  gh:windows: echo TODO

  glab:
    cmds:
      - task: glab:{{OS}}

  glab:darwin: echo TODO

  glab:linux:
    deps:
      - :install:software:gh
    env:
      TMP:
        sh: mktemp -d
    cmds:
      - gh release download -R profclems/glab -p "*Linux_amd64.tar.gz" -D "$TMP"
      - tar -zxvf "$TMP"/*Linux_amd64.tar.gz --strip-component 1 -C "$TMP"
      - mkdir -p ./bin && mv "$TMP"/glab ./bin/glab
      - chmod +x ./bin/glab
      - rm -rf "$TMP"
    status:
      - '[ -f ./bin/glab ]'

  glab:windows: echo TODO

  task:
    cmds:
      - task: task:{{OS}}

  task:darwin: echo TODO

  task:linux:
    deps:
      - :install:software:gh
    env:
      TMP:
        sh: mktemp -d
    cmds:
      - gh release download -R go-task/task -p "*linux_amd64.tar.gz"
      - tar -zxvf "$TMP"/task_linux_amd64.tar.gz -C "$TMP"
      - mkdir -p ./bin && mv "$TMP"/task ./bin/task
      - chmod +x ./bin/task
      - rm -rf "$TMP"

  task:windows: echo TODO

  yq:
    cmds:
      - task: yq:{{OS}}

  yq:darwin:
    deps:
      - :install:software:gh
    env:
      TMP:
        sh: mktemp -d
    cmds:
      - gh release download -R mikefarah/yq -p "yq_darwin_amd64" -D "$TMP"
      - mkdir -p ./bin && mv "$TMP"/yq_darwin_amd64 ./bin/yq
      - chmod +x ./bin/yq
      - rm -rf "$TMP"
    status:
      - '[ -f ./bin/yq ]'

  yq:linux:
    deps:
      - :install:software:gh
    env:
      TMP:
        sh: mktemp -d
    cmds:
      - gh release download -R mikefarah/yq -p "*linux_amd64" -D "$TMP"
      - mkdir -p ./bin && mv "$TMP"/yq* ./bin/yq
      - chmod +x ./bin/yq
      - rm -rf "$TMP"
    status:
      - '[ -f ./bin/yq ]'

  yq:windows:
    deps:
      - :install:software:gh
    env:
      TMP:
        sh: mktemp -d
    cmds:
      - gh release download -R mikefarah/yq -p "yq_windows_amd64.exe" -D "$TMP"
      - mkdir -p ./bin && mv "$TMP"/yq_windows_amd64.exe ./bin/yq.exe
      - chmod +x ./bin/yq.exe
      - rm -rf "$TMP"
    status:
      - '[ -f ./bin/yq ]'
