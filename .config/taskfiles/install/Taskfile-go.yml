---
version: '3'

tasks:
  bin:
    run: once
    cmds:
      - task: install
        vars:
          BIN: bin
          INSTALL_TASK: '{{.TASK}}'
          PACKAGE: github.com/marcosnils/bin@latest

  bundle:
    deps:
      - bin
      - goofys
      - goreleaser
      - nfpm

  goofys:
    run: once
    cmds:
      - task: install
        vars:
          BIN: goofys
          INSTALL_TASK: '{{.TASK}}'
          PACKAGE: github.com/kahing/goofys@latest

  goreleaser:
    run: once
    cmds:
      - task: install
        vars:
          BIN: goreleaser
          INSTALL_TASK: '{{.TASK}}'
          PACKAGE: github.com/goreleaser/goreleaser@latest

  gotestsum:
    run: once
    cmds:
      - task: install
        vars:
          BIN: gotestsum
          INSTALL_TASK: '{{.TASK}}'
          PACKAGE: gotest.tools/gotestsum@latest

  install:
    vars:
      INSTALL_RECORD:
        sh: |
          if [ -n "$RECORD_INSTALL" ]; then
            mkdir -p local/slim
            echo '{{.BIN}}' >> local/slim/exe.txt
            echo '{{.INSTALL_TASK}}' >> local/slim/install.txt
          fi
    run: when_changed
    log:
      error: Failed to install `{{.PACKAGE}}` with Go
      start: Installing Go package named `{{.PACKAGE}}`
      success: Successfully installed `{{.PACKAGE}}`
    cmds:
      - task: :install:software:go
      - go install {{.PACKAGE}}
    status:
      - type {{.BIN}} > /dev/null

  misspell:
    run: once
    cmds:
      - task: install
        vars:
          BIN: misspell
          INSTALL_TASK: '{{.TASK}}'
          PACKAGE: github.com/client9/misspell/cmd/misspell@latest

  nfpm:
    run: once
    cmds:
      - task: install
        vars:
          BIN: nfpm
          INSTALL_TASK: '{{.TASK}}'
          PACKAGE: github.com/goreleaser/nfpm/v2/cmd/nfpm@latest

  node-prune:
    run: once
    cmds:
      - task: install
        vars:
          BIN: node-prune
          INSTALL_TASK: '{{.TASK}}'
          PACKAGE: go install github.com/tj/node-prune@latest
