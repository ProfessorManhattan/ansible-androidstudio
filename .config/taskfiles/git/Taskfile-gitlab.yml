---
version: '3'

tasks:
  group:exec:
    desc: Execute a shell script across all repositories in a group and commit the changes
    summary: |
      # Execute script across entire groups of GitLab repositories

      This task will recursively compile a list of all projects that are in a group and its'
      subgroups and then execute a command in each of the repositories.

      **Example (in the format task taskName -- gitlabGroup ---- commandsToRun):**
      `task {{.TASK}} -- megabyte-labs/ansible-roles ---- rm .ansible-lint; git add --all; git commit; git push; etc.`
    cmds:
      - task group:repositories -- {{index (splitList " ---- " .CLI_ARGS) 0}}
      - |
        BASE_PWD="$PWD"
        function execRepo() {
          REPO_DETAILS="$1"
          REPO_URL="$(echo $REPO_DETAILS | sed 's/\s.*$//')"
          REPO_PATH="$(echo $REPO_DETAILS | sed 's/^.*\s//')"
          DIR_NAME="$(dirname $REPO_PATH)"
          mkdir -p "$DIR_NAME"
          if [ -d "$REPO_PATH" ]; then
            cd "$REPO_PATH"
            git reset --hard HEAD
            git clean -fxd
            git pull origin master
            cd "$BASE_PWD"
          else
            git clone --depth=1 "$REPO_URL" "$REPO_PATH"
          fi
          echo "Running bash command on $REPO_PATH"
          (
            cd $REPO_PATH
            {{index (splitList " ---- " .CLI_ARGS) 1}}
            cd $BASE_PWD
          )
          echo "Finished running bash command on $REPO_PATH"
        }
        cat repository-list.txt | while IFS= read -r REPO_DETAILS; do
          echo "Executing logic on $REPO_DETAILS"
          execRepo "$REPO_DETAILS" &
        done
        wait

  group:repositories:
    deps:
      - :install:software:glab
      - :install:software:jq
    summary: |
      # Return repositories belonging to group and sub-groups

      Given a GitLab group path (which can include subgroups as well), this task will cycle through
      the group and its' subgroups and generate a list of repositories. The repositories are
      saved to a file called `repository-list.txt`.

      **Example specifying a group and subgroup:**
      `task git:gitlab:group:repositories -- megabyte-labs/ansible-roles`

      **Example opening an interactive prompt:**
      `task git:gitlab:group:repositories`
    cmds:
      - rm -f repository-list.txt
      - task: group:repositories:{{if .CLI_ARGS}}loop{{else}}prompt{{end}}

  group:repositories:loop:
    cmds:
      - glab api "groups/{{urlquery .CLI_ARGS}}" | jq -r '.projects[] | .ssh_url_to_repo + "   " + .path_with_namespace' >> repository-list.txt
      - |
        SUBGROUPS="$(glab api groups/{{urlquery .CLI_ARGS}}/subgroups | jq -r '.[] | .full_path')"
        echo "$SUBGROUPS"
        if [ -n "$SUBGROUPS" ]; then
          echo "$SUBGROUPS" | while IFS= read -r SUBGROUP; do
            task {{.TASK}} -- "$SUBGROUP" &
          done
        fi
        wait

  group:repositories:prompt: 'echo TODO'
